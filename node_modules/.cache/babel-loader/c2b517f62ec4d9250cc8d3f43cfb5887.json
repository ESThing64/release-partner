{"ast":null,"code":"var _jsxFileName = \"/Users/johncoakley/development/projects/release-partner/src/views/application/e-commerce/Checkout/AddressCard.js\";\nimport PropTypes from 'prop-types'; // material-ui\n\nimport { Button, IconButton, Grid, Stack, Typography } from '@mui/material'; // project imports\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport Chip from 'ui-component/extended/Chip'; // assets\n\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone'; // ==============================|| CHECKOUT BILLING ADDRESS - ADDRESS CARD ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddressCard = _ref => {\n  let {\n    address,\n    single,\n    change,\n    handleClickOpen,\n    billingAddressHandler,\n    onBack\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(SubCard, {\n    sx: {\n      height: single ? 'auto' : '100%'\n    },\n    children: address && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [single && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: change ? 'h3' : 'h3',\n            children: \"Shipping Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), change && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(EditTwoToneIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 101\n            }, this),\n            onClick: onBack,\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            spacing: 0.5,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: address.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                textTransform: 'capitalize'\n              },\n              children: [\"(\", address.destination, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), address.isDefault && /*#__PURE__*/_jsxDEV(Chip, {\n            chipcolor: \"primary\",\n            label: \"Default\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 0.5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: `${address.building}, ${address.street}, ${address.city}, ${address.state}, ${address.country} - ${address.post}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"secondary\",\n            children: address.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), !single && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: [billingAddressHandler && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => billingAddressHandler(address),\n            children: \"Deliver to this Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            spacing: 0,\n            children: [handleClickOpen && /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleClickOpen(address),\n              children: /*#__PURE__*/_jsxDEV(EditTwoToneIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              children: /*#__PURE__*/_jsxDEV(DeleteTwoToneIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddressCard;\nAddressCard.propTypes = {\n  address: PropTypes.object,\n  single: PropTypes.bool,\n  change: PropTypes.bool,\n  handleClickOpen: PropTypes.func,\n  billingAddressHandler: PropTypes.func,\n  onBack: PropTypes.func\n};\nexport default AddressCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressCard\");","map":{"version":3,"sources":["/Users/johncoakley/development/projects/release-partner/src/views/application/e-commerce/Checkout/AddressCard.js"],"names":["PropTypes","Button","IconButton","Grid","Stack","Typography","SubCard","Chip","EditTwoToneIcon","DeleteTwoToneIcon","AddressCard","address","single","change","handleClickOpen","billingAddressHandler","onBack","height","name","textTransform","destination","isDefault","building","street","city","state","country","post","phone","propTypes","object","bool","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Button, IconButton, Grid, Stack, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport Chip from 'ui-component/extended/Chip';\r\n\r\n// assets\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\n\r\n// ==============================|| CHECKOUT BILLING ADDRESS - ADDRESS CARD ||============================== //\r\n\r\nconst AddressCard = ({ address, single, change, handleClickOpen, billingAddressHandler, onBack }) => (\r\n    <SubCard sx={{ height: single ? 'auto' : '100%' }}>\r\n        {address && (\r\n            <Grid container spacing={2}>\r\n                {single && (\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Typography variant={change ? 'h3' : 'h3'}>Shipping Address</Typography>\r\n                            {change && (\r\n                                <Button variant=\"contained\" size=\"small\" color=\"primary\" startIcon={<EditTwoToneIcon />} onClick={onBack}>\r\n                                    Change\r\n                                </Button>\r\n                            )}\r\n                        </Stack>\r\n                    </Grid>\r\n                )}\r\n                <Grid item xs={12}>\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\r\n                            <Typography variant=\"subtitle1\">{address.name}</Typography>\r\n                            <Typography variant=\"caption\" sx={{ textTransform: 'capitalize' }}>\r\n                                ({address.destination})\r\n                            </Typography>\r\n                        </Stack>\r\n                        {address.isDefault && <Chip chipcolor=\"primary\" label=\"Default\" size=\"small\" />}\r\n                    </Stack>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Stack spacing={0.5}>\r\n                        <Typography variant=\"body2\">\r\n                            {`${address.building}, ${address.street}, ${address.city}, ${address.state}, ${address.country} - ${address.post}`}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"secondary\">\r\n                            {address.phone}\r\n                        </Typography>\r\n                    </Stack>\r\n                </Grid>\r\n                {!single && (\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                            {billingAddressHandler && (\r\n                                <Button variant=\"outlined\" onClick={() => billingAddressHandler(address)}>\r\n                                    Deliver to this Address\r\n                                </Button>\r\n                            )}\r\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={0}>\r\n                                {handleClickOpen && (\r\n                                    <IconButton size=\"small\" onClick={() => handleClickOpen(address)}>\r\n                                        <EditTwoToneIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                )}\r\n                                <IconButton size=\"small\">\r\n                                    <DeleteTwoToneIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        )}\r\n    </SubCard>\r\n);\r\n\r\nAddressCard.propTypes = {\r\n    address: PropTypes.object,\r\n    single: PropTypes.bool,\r\n    change: PropTypes.bool,\r\n    handleClickOpen: PropTypes.func,\r\n    billingAddressHandler: PropTypes.func,\r\n    onBack: PropTypes.func\r\n};\r\n\r\nexport default AddressCard;\r\n"]},"metadata":{},"sourceType":"module"}